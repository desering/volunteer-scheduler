---
// https://github.com/payloadcms/payload/blob/main/packages/next/src/routes/rest/auth/login.ts
// Astro alternative on above file

import { actions } from "astro:actions";
import { css } from "styled-system/css/css";
import { panda } from "styled-system/jsx";
import { vstack } from "styled-system/patterns";
import { button } from "styled-system/recipes/button";
import { input } from "styled-system/recipes/input";
import Layout from "~/layouts/layout.astro";

if (Astro.locals.user) {
  return Astro.redirect("/");
}

const errors: string[] = [];

if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();

  const email = data.get("email") as string;
  const password = data.get("password") as string;

  if (!email) errors.push("Email is required.");
  if (!password) errors.push("Password is required.");

  if (email && password) {
    try {
      const loginResult = await Astro.callAction(actions.loginUser, {
        email,
        password,
      });

      if (loginResult.data) return Astro.redirect("/");
      if (loginResult.error?.message) errors.push(loginResult.error?.message);
    } catch (error) {
      if (error instanceof Error) {
        errors.push(error.message);
      } else {
        errors.push("Login failed. An unknown error occurred.");
      }
    }
  }
}
---

<Layout title="Sering Volunteer Scheduling | Login">
  <panda.div
    display="flex"
    minHeight="screen"
    width="screen"
    justifyContent="center"
    alignItems="center"
  >
    <form method="POST" class={vstack({ alignItems: "stretch" })}>
      {
        errors.map((error) => (
          <panda.div
            class={css({
              color: "gray.1",
              backgroundColor: "tomato",
              paddingX: "4",
              paddingY: "2",
            })}
          >
            <panda.div>{error}</panda.div>
          </panda.div>
        ))
      }

      <div>
        <label for="email">Email:</label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class={input({
            size: "lg",
          })}
        />
      </div>
      <panda.div width="full">
        <label for="password">Password:</label>
        <input
          type="password"
          id="password"
          name="password"
          required
          class={input({
            size: "lg",
          })}
        />
      </panda.div>

      <button
        type="submit"
        class:list={[
          button({ size: "lg", variant: "solid" }),
          css({ flexGrow: 1 }),
        ]}
      >
        Login
      </button>

      <a
        type="button"
        onclick="window.location.href='/'"
        class:list={[
          button({ size: "lg", variant: "outline" }),
          css({ flexGrow: 1 }),
        ]}
      >
        Return
      </a>
    </form>
  </panda.div>
</Layout>
